import{_ as o}from"./index.caf33a77.js";import{w as i}from"./writeEffect.050910cb.js";import"./sleep.b2c92b69.js";const d=(t,e)=>{new MutationObserver(n=>{n.forEach(s=>{const c=s.type==="attributes",a=s.target.classList.contains("typing");c&&a&&e()})}).observe(t,{attributes:!0,childList:!0,subtree:!0})},l=t=>t.forEach(e=>e.currentNode.textContent=""),g=async(t,e)=>{if(e.cascade)l(t);else{const{getLongestTextElement:r}=await o(()=>import("./getLongestTextElement.023ff019.js"),[]),n=r(t);d(n,()=>e.dispatch("done"))}for(const r of t)e.cascade?(await i(r,e),r.currentNode.classList.replace("typing","finished-typing")):i(r,e).then(()=>{r.currentNode.classList.replace("typing","finished-typing")});e.cascade&&e.dispatch("done")};export{g as mode};
